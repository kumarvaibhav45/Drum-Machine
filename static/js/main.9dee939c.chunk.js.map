{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["bankOne","keyCode","keyTrigger","id","url","bankTwo","onClickHandler","power","setDisplay","key","volume","style","document","getElementById","margin","sound","currentTime","play","playSound","background","setTimeout","DrumPad","buttonText","className","onClick","src","PowerSwitch","setPower","type","checked","onChange","VolumeChanger","setVolume","value","Math","round","KitSwitch","kit","setKit","on","Pad","pad","React","useEffect","handleKeyPress","filter","tune","addEventListener","removeEventListener","map","App","useState","display","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9dee939c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n// Array for heater kit notes\nconst bankOne = [\n\t{\n\t\tkeyCode: 81,\n\t\tkeyTrigger: 'Q',\n\t\tid: 'Heater-1',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n\t},\n\t{\n\t\tkeyCode: 87,\n\t\tkeyTrigger: 'W',\n\t\tid: 'Heater-2',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n\t},\n\t{\n\t\tkeyCode: 69,\n\t\tkeyTrigger: 'E',\n\t\tid: 'Heater-3',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n\t},\n\t{\n\t\tkeyCode: 65,\n\t\tkeyTrigger: 'A',\n\t\tid: 'Heater-4',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n\t},\n\t{\n\t\tkeyCode: 83,\n\t\tkeyTrigger: 'S',\n\t\tid: 'Clap',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n\t},\n\t{\n\t\tkeyCode: 68,\n\t\tkeyTrigger: 'D',\n\t\tid: 'Open-HH',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n\t},\n\t{\n\t\tkeyCode: 90,\n\t\tkeyTrigger: 'Z',\n\t\tid: \"Kick-n'-Hat\",\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n\t},\n\t{\n\t\tkeyCode: 88,\n\t\tkeyTrigger: 'X',\n\t\tid: 'Kick',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n\t},\n\t{\n\t\tkeyCode: 67,\n\t\tkeyTrigger: 'C',\n\t\tid: 'Closed-HH',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n\t}\n];\n\n// Array for piano kit notes\nconst bankTwo = [\n\t{\n\t\tkeyCode: 81,\n\t\tkeyTrigger: 'Q',\n\t\tid: 'Chord-1',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n\t},\n\t{\n\t\tkeyCode: 87,\n\t\tkeyTrigger: 'W',\n\t\tid: 'Chord-2',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n\t},\n\t{\n\t\tkeyCode: 69,\n\t\tkeyTrigger: 'E',\n\t\tid: 'Chord-3',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n\t},\n\t{\n\t\tkeyCode: 65,\n\t\tkeyTrigger: 'A',\n\t\tid: 'Shaker',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n\t},\n\t{\n\t\tkeyCode: 83,\n\t\tkeyTrigger: 'S',\n\t\tid: 'Open-HH',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n\t},\n\t{\n\t\tkeyCode: 68,\n\t\tkeyTrigger: 'D',\n\t\tid: 'Closed-HH',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n\t},\n\t{\n\t\tkeyCode: 90,\n\t\tkeyTrigger: 'Z',\n\t\tid: 'Punchy-Kick',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n\t},\n\t{\n\t\tkeyCode: 88,\n\t\tkeyTrigger: 'X',\n\t\tid: 'Side-Stick',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n\t},\n\t{\n\t\tkeyCode: 67,\n\t\tkeyTrigger: 'C',\n\t\tid: 'Snare',\n\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n\t}\n];\n\n// Plays sound\nconst playSound = (key, volume) => {\n\tconst sound = document.getElementById(key);\n\tsound.volume = volume;\n\tsound.currentTime = 0;\n\tsound.play();\n};\n\n// Handle button clicks\nconst onClickHandler = (id, power, setDisplay, key, volume) => {\n\tconst style = document.getElementById(id).style;\n\tstyle.margin = '2px';\n\tif (power) {\n\t\tsetDisplay(id);\n\t\tplaySound(key, volume);\n\t\tstyle.background = '#f514f5';\n\t}\n\tsetTimeout(() => {\n\t\tstyle.background = 'pink';\n\t\tstyle.margin = '0';\n\t}, 100);\n};\n\n// Drum pad buttons\nconst DrumPad = ({ buttonText, setDisplay, power, id, url, volume }) => {\n\treturn (\n\t\t<button\n\t\t\tid={id}\n\t\t\tclassName=\"drum-pad\"\n\t\t\tonClick={() => {\n\t\t\t\tonClickHandler(id, power, setDisplay, buttonText, volume);\n\t\t\t}}\n\t\t>\n\t\t\t<audio className=\"clip\" id={buttonText} src={url} />\n\t\t\t{buttonText}\n\t\t</button>\n\t);\n};\n\n// Power switch button\nconst PowerSwitch = ({ power, setPower }) => {\n\treturn (\n\t\t<div className=\"power-switch\">\n\t\t\t<h4>power</h4>\n\t\t\t<input type=\"checkbox\" className=\"switch\" checked={power} onChange={() => setPower(!power)} />\n\t\t</div>\n\t);\n};\n\n// Volume slider\nconst VolumeChanger = ({ volume, setVolume, setDisplay, power }) => {\n\treturn (\n\t\t<div className=\"volume-slider\">\n\t\t\t<input\n\t\t\t\ttype=\"range\"\n\t\t\t\tvalue={volume}\n\t\t\t\tid=\"slider\"\n\t\t\t\tonChange={() => {\n\t\t\t\t\tif (power) {\n\t\t\t\t\t\tsetVolume(document.getElementById('slider').value / 100);\n\t\t\t\t\t\tsetDisplay(`Volume: ${Math.round(document.getElementById('slider').value)}`);\n\t\t\t\t\t\tsetTimeout(() => setDisplay(''), 1500);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\n// Instrument selector buttons\nconst KitSwitch = ({ kit, setKit, on, power }) => {\n\treturn (\n\t\t<div className=\"kit-switch\">\n\t\t\t<input type=\"checkbox\" className=\"switch2\" checked={on} onChange={() => power && setKit(kit)} />\n\t\t\t<label>{kit === '0' ? 'heater kit' : 'smooth piano kit'}</label>\n\t\t</div>\n\t);\n};\n\n// Drum pad\nconst Pad = ({ pad, setDisplay, power, volume }) => {\n\tReact.useEffect(() => {\n\t\tconst handleKeyPress = ({ keyCode }) => {\n\t\t\tpower &&\n\t\t\t\tpad.filter(\n\t\t\t\t\t(tune) =>\n\t\t\t\t\t\ttune.keyCode === keyCode && onClickHandler(tune.id, power, setDisplay, tune.keyTrigger, volume)\n\t\t\t\t);\n\t\t};\n\n\t\tdocument.addEventListener('keydown', handleKeyPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleKeyPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<div className=\"drum-pad-container\">\n\t\t\t{pad.map((tune) => (\n\t\t\t\t<DrumPad\n\t\t\t\t\tkey={tune.id}\n\t\t\t\t\tid={tune.id}\n\t\t\t\t\tbuttonText={tune.keyTrigger}\n\t\t\t\t\tvolume={volume}\n\t\t\t\t\turl={tune.url}\n\t\t\t\t\tsetDisplay={setDisplay}\n\t\t\t\t\tpower={power}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nfunction App() {\n\t// state variables\n\tconst useState = React.useState;\n\tconst [ power, setPower ] = useState(true);\n\tconst [ kit, setKit ] = useState('0');\n\tconst [ volume, setVolume ] = useState('0.3');\n\tconst [ display, setDisplay ] = useState('');\n\n\treturn (\n\t\t<div id=\"drum-machine\">\n\t\t\t<Pad pad={kit === '0' ? bankOne : bankTwo} setDisplay={setDisplay} power={power} volume={volume} />\n\t\t\t<div className=\"controls-container\">\n\t\t\t\t<PowerSwitch power={power} setPower={setPower} />\n\t\t\t\t<div id=\"display\">{display}</div>\n\t\t\t\t<VolumeChanger volume={volume * 100} setVolume={setVolume} power={power} setDisplay={setDisplay} />\n\t\t\t\t<div className=\"kit-selector-wrapper\">\n\t\t\t\t\t<h4>bank</h4>\n\t\t\t\t\t<div className=\"kit-selector\">\n\t\t\t\t\t\t<KitSwitch key={'0'} kit={'0'} on={kit === '0' && true} power={power} setKit={setKit} />\n\t\t\t\t\t\t<KitSwitch key={'1'} kit={'1'} on={kit === '1' && true} power={power} setKit={setKit} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"background-text\">drum machine</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}